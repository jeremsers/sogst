---
interface Props {
	title: string;
	picto: ImageMetadata;
	numb: string;
	isActive?: boolean;
}

const { picto, title, numb, isActive = false } = Astro.props;
import { Picture } from "astro:assets";
---

<div
	class={`picto-container${numb} picto-container${isActive ? " active" : ""}`}
>
	<div class="picto">
		<Picture
			src={picto}
			alt=""
			class="picto-img"
			loading="lazy"
			format="avif"
			decoding="async"
		/>
	</div>
	<div class="title">
		<h3>{title}</h3>
	</div>
</div>

<style lang="scss">
	.picto-container {
		background-color: var(--dark-blue);
		border-radius: var(--radius-md);
		padding: var(--spacing-md);
		display: flex;
		flex-direction: column;
		gap: var(--spacing-md);
		height: clamp(180px, 25vh, 220px);
		transition: var(--transition-normal);
		cursor: pointer;
		border: 2px solid transparent;

		@media (max-width: 768px) {
			height: auto;
			min-height: 160px;
			padding: var(--spacing-sm);
			gap: var(--spacing-sm);
		}

		&:hover:not(.active) {
			transform: translateY(-5px);
			border-color: var(--primary-color);
			box-shadow: var(--shadow-md);
		}

		&.active {
			background-color: rgba(75, 75, 75, 0.9);
			border-color: var(--primary-color);
			transform: scale(1.05);
		}
	}

	.picto {
		flex: 0 0 auto;
		display: flex;
		justify-content: center;
		align-items: center;
		padding: var(--spacing-sm);

		img {
			width: clamp(40px, 6vw, 60px);
			height: clamp(40px, 6vw, 60px);
			transition: var(--transition-normal);
			filter: brightness(0) invert(1);

			.active & {
				transform: scale(1.1);
			}
		}
	}

	.title {
		text-align: center;
		flex: 1;
		display: flex;
		align-items: center;
		justify-content: center;

		h3 {
			color: var(--text-light);
			margin: 0;
			font-weight: 500;
			line-height: 1.4;
			font-size: clamp(0.85rem, 1.5vw, 1rem);
			overflow-wrap: break-word;
			word-wrap: break-word;
			hyphens: auto;
			padding: 0 var(--spacing-xs);

			@media (max-width: 768px) {
				font-size: 0.9rem;
			}
		}
	}
</style>
