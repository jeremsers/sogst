---
import PictoCard from "../components/PictoCard.astro";
import { getCollection } from "astro:content";
const allInter = await getCollection("intervention");
import { Image } from "astro:assets";
console.log(allInter)
---

<section class="intervention" data-col = {allInter}>
  <div class="pictocard-container">
    {
      allInter.map((intervention) => (
        <PictoCard
          picto={intervention.data.picto}
          title={intervention.data.title}
        />
      ))
    }
  </div>
  {allInter.map((intervention) => (
    <div class= `presentation-container-${intervention.data.numb} presentation-container` style="display: none;">
     <Image transition:name='anim' src={intervention.data.cover} alt="" class="presentation-image" width={intervention.data.cover.width}
        densities={[1.5, 2]}  />

    <div class="presentation-text">
      <h3 class="presentation-title">{intervention.data.title}</h3>
      <p class="presentation-description">{intervention.data.description}</p>
      <a href={intervention.slug}>

      <button>En savoir plus</button>
      </a>
    </div>
  </div>
))}

</section>

<script>
  document.addEventListener('astro:page-load', () => {
  const pictos = document.querySelectorAll(".picto-container");
  let init = document.querySelector(".presentation-container-0") as HTMLElement;
  init.style.display = "flex";
  for (let i = 0; i < pictos.length; i++) {
    pictos[i].addEventListener("click", () => {

        let interdisplay = document.querySelector(`.presentation-container-${i}`) as HTMLElement;
        let alldisplay = document.querySelectorAll(".presentation-container");
        alldisplay.forEach(element => {
          element.style.display = "none";})
        interdisplay.style.display = "flex";

    });
  };
})
</script>

<style>
  .intervention {
    display: flex;
    flex-direction: row;
    background-color: #fff;
    min-height: 90vh;
  }
  .pictocard-container {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    align-items: center;
    justify-items: center;
    width: 45%;
    padding: 5px;
    gap: 1vw;
   
    @media (max-width: 1000px) {
      width: 35%;
      grid-template-columns: 1fr 1fr;
    }
    @media (max-width: 768px) {
      width: 30%;
      grid-template-columns: 1fr;
      padding: 10px;
    }
  }
  .presentation-container {
    
    display: flex;
    flex-direction: column;
    width: 65%;
    background-color: #3a3a3a;
    color: white;
    text-align: justify;
    overflow: hidden;
    @media (max-width: 1000px) {
      width: 65%;
    }
    @media (max-width: 700px) {
      width: 70%;
    }
    
  }
  .presentation-text{
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    height: 50%;
    padding: 50px 50px;
  }
  .img-container {
    flex-shrink: 0;
    width: 100%;
    
}
.presentation-image{
    width: 100%;
    height: 30vw;
    object-fit: cover;
    
  }

  .presentation-text h3{
    font-size: clamp(24px, 2vw, 48px);
    margin: 0;
    text-align: center;
}

  .presentation-text p{
      font-size: clamp(16px, 2vw, 24px);
      margin: 0;
    }

  button{
    background-color: #2e81ff;
    border-style: none;
    color: white;
    border-radius: 25px;
    min-height: 5vh;
    width: clamp(100px, 15vw, 150px);
    font-size: clamp(12px, 2vw, 20px);
    padding: 10px;
  }
</style>
